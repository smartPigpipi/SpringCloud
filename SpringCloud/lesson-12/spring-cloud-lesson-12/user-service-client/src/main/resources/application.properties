## 服务端口
server.port = 8080

## 扩展 IPing 实现
user-service-provider.ribbon.NFLoadBalancerPingClassName = \
  com.segumentfault.spring.cloud.lesson12.user.service.client.ping.MyPing

## 以下内容有 Config Server 提供
### 提供方服务名称
#provider.service.name = user-service-provider
### 提供方服务主机
#provider.service.host = localhost
### 提供方服务端口
#provider.service.port = 9090
### 配置 @FeignClient(name = "${user.service.name}") 中的占位符
### user.service.name 实际需要制定 UserService 接口的提供方
### 也就是 user-service-provider，可以使用 ${provider.service.name} 替代
#user.service.name = ${provider.service.name}


## Kafka 生产者配置

spring.kafka.BOOTSTRAP-SERVERS=120.79.39.41:9092
spring.kafka.consumer.group-id=sf-group
spring.kafka.consumer.clientId=user-service-client


# 生产者 值的序列化
spring.kafka.producer.valueSerializer =com.segumentfault.spring.cloud.lesson12.user.service.client.serializer.ObjectSerializer

## Spring Cloud Stream Binding 配置
### destination 指定 Rabbit MQ Topic
### user-message-out 为输入管道名称
spring.cloud.stream.bindings.user-message-out.destination = sf-users